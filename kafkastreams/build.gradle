plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'com.google.cloud.tools.jib'
}

jib {
    extraDirectories {
        paths {
            path{
                from = file('supervisord')
                into = '/etc/supervisor/conf.d'
            }
        }
    }
    container {
        entrypoint = ["/tini", "--"]
        args = ["supervisord", "-e", "info", "-n"]
    }
    from {
        image = 'registry.apos.in/apos/base-images/spring-app:17.0.4_8-jdk-v1.0'
        auth {
            username = nexususer
            password = nexuspassword
        }
    }
    to {
        image = 'registry.apos.in/anupam/kafka-examples/kafkastreams'
        auth {
            username = nexususer
            password = nexuspassword
        }
    }
}

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation project(':kafka-streams-statestore')
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
//    implementation 'org.springframework:spring-messaging'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-streams'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

test {
    useJUnitPlatform()
}